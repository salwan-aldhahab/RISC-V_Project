$date
	Fri Sep 26 22:57:25 2025
$end
$version
	ModelSim Version 2020.1
$end
$timescale
	1ps
$end

$scope module pd0_testbench $end
$var parameter 32 ! DWIDTH $end
$var reg 1 " clk $end
$var reg 1 # rst $end
$var reg 8 $ alu_a [7:0] $end
$var reg 8 % alu_b [7:0] $end
$var reg 8 & alu_result [7:0] $end
$var reg 2 ' alu_op [1:0] $end
$var reg 1 ( zero_flag $end
$var reg 1 ) neg_flag $end
$var reg 8 * reg_data_in [7:0] $end
$var reg 8 + reg_data_out [7:0] $end
$var reg 8 , pipe_in1 [7:0] $end
$var reg 8 - pipe_in2 [7:0] $end
$var reg 8 . pipe_out [7:0] $end

$scope module my_alu $end
$var parameter 32 / DWIDTH $end
$var wire 1 0 sel_i [1] $end
$var wire 1 1 sel_i [0] $end
$var wire 1 2 op1_i [7] $end
$var wire 1 3 op1_i [6] $end
$var wire 1 4 op1_i [5] $end
$var wire 1 5 op1_i [4] $end
$var wire 1 6 op1_i [3] $end
$var wire 1 7 op1_i [2] $end
$var wire 1 8 op1_i [1] $end
$var wire 1 9 op1_i [0] $end
$var wire 1 : op2_i [7] $end
$var wire 1 ; op2_i [6] $end
$var wire 1 < op2_i [5] $end
$var wire 1 = op2_i [4] $end
$var wire 1 > op2_i [3] $end
$var wire 1 ? op2_i [2] $end
$var wire 1 @ op2_i [1] $end
$var wire 1 A op2_i [0] $end
$var reg 8 B res_o [7:0] $end
$var reg 1 C zero_o $end
$var reg 1 D neg_o $end
$var reg 8 E result [7:0] $end
$upscope $end

$scope module my_reg $end
$var parameter 32 F DWIDTH $end
$var wire 1 G clk $end
$var wire 1 H rst $end
$var wire 1 I in_i [7] $end
$var wire 1 J in_i [6] $end
$var wire 1 K in_i [5] $end
$var wire 1 L in_i [4] $end
$var wire 1 M in_i [3] $end
$var wire 1 N in_i [2] $end
$var wire 1 O in_i [1] $end
$var wire 1 P in_i [0] $end
$var reg 8 Q out_o [7:0] $end
$upscope $end

$scope module my_pipeline $end
$var parameter 32 R DWIDTH $end
$var wire 1 S clk $end
$var wire 1 T rst $end
$var wire 1 U op1_i [7] $end
$var wire 1 V op1_i [6] $end
$var wire 1 W op1_i [5] $end
$var wire 1 X op1_i [4] $end
$var wire 1 Y op1_i [3] $end
$var wire 1 Z op1_i [2] $end
$var wire 1 [ op1_i [1] $end
$var wire 1 \ op1_i [0] $end
$var wire 1 ] op2_i [7] $end
$var wire 1 ^ op2_i [6] $end
$var wire 1 _ op2_i [5] $end
$var wire 1 ` op2_i [4] $end
$var wire 1 a op2_i [3] $end
$var wire 1 b op2_i [2] $end
$var wire 1 c op2_i [1] $end
$var wire 1 d op2_i [0] $end
$var reg 8 e res_o [7:0] $end
$var reg 8 f add_res [7:0] $end
$var reg 1 g z_add $end
$var reg 1 h n_add $end
$var reg 8 i add_res_reg [7:0] $end
$var reg 8 j op1_fwd_reg [7:0] $end
$var reg 8 k sub_res [7:0] $end
$var reg 1 l z_sub $end
$var reg 1 m n_sub $end

$scope module unit_alu_add $end
$var parameter 32 n DWIDTH $end
$var wire 1 o sel_i [1] $end
$var wire 1 p sel_i [0] $end
$var wire 1 U op1_i [7] $end
$var wire 1 V op1_i [6] $end
$var wire 1 W op1_i [5] $end
$var wire 1 X op1_i [4] $end
$var wire 1 Y op1_i [3] $end
$var wire 1 Z op1_i [2] $end
$var wire 1 [ op1_i [1] $end
$var wire 1 \ op1_i [0] $end
$var wire 1 ] op2_i [7] $end
$var wire 1 ^ op2_i [6] $end
$var wire 1 _ op2_i [5] $end
$var wire 1 ` op2_i [4] $end
$var wire 1 a op2_i [3] $end
$var wire 1 b op2_i [2] $end
$var wire 1 c op2_i [1] $end
$var wire 1 d op2_i [0] $end
$var reg 8 q res_o [7:0] $end
$var reg 1 r zero_o $end
$var reg 1 s neg_o $end
$var reg 8 t result [7:0] $end
$upscope $end

$scope module unit_add_res_reg $end
$var parameter 32 u DWIDTH $end
$var wire 1 S clk $end
$var wire 1 T rst $end
$var wire 1 v in_i [7] $end
$var wire 1 w in_i [6] $end
$var wire 1 x in_i [5] $end
$var wire 1 y in_i [4] $end
$var wire 1 z in_i [3] $end
$var wire 1 { in_i [2] $end
$var wire 1 | in_i [1] $end
$var wire 1 } in_i [0] $end
$var reg 8 ~ out_o [7:0] $end
$upscope $end

$scope module unit_op1_fwd_reg $end
$var parameter 32 !! DWIDTH $end
$var wire 1 S clk $end
$var wire 1 T rst $end
$var wire 1 U in_i [7] $end
$var wire 1 V in_i [6] $end
$var wire 1 W in_i [5] $end
$var wire 1 X in_i [4] $end
$var wire 1 Y in_i [3] $end
$var wire 1 Z in_i [2] $end
$var wire 1 [ in_i [1] $end
$var wire 1 \ in_i [0] $end
$var reg 8 "! out_o [7:0] $end
$upscope $end

$scope module unit_alu_sub $end
$var parameter 32 #! DWIDTH $end
$var wire 1 $! sel_i [1] $end
$var wire 1 %! sel_i [0] $end
$var wire 1 &! op1_i [7] $end
$var wire 1 '! op1_i [6] $end
$var wire 1 (! op1_i [5] $end
$var wire 1 )! op1_i [4] $end
$var wire 1 *! op1_i [3] $end
$var wire 1 +! op1_i [2] $end
$var wire 1 ,! op1_i [1] $end
$var wire 1 -! op1_i [0] $end
$var wire 1 .! op2_i [7] $end
$var wire 1 /! op2_i [6] $end
$var wire 1 0! op2_i [5] $end
$var wire 1 1! op2_i [4] $end
$var wire 1 2! op2_i [3] $end
$var wire 1 3! op2_i [2] $end
$var wire 1 4! op2_i [1] $end
$var wire 1 5! op2_i [0] $end
$var reg 8 6! res_o [7:0] $end
$var reg 1 7! zero_o $end
$var reg 1 8! neg_o $end
$var reg 8 9! result [7:0] $end
$upscope $end

$scope module unit_res_reg $end
$var parameter 32 :! DWIDTH $end
$var wire 1 S clk $end
$var wire 1 T rst $end
$var wire 1 ;! in_i [7] $end
$var wire 1 <! in_i [6] $end
$var wire 1 =! in_i [5] $end
$var wire 1 >! in_i [4] $end
$var wire 1 ?! in_i [3] $end
$var wire 1 @! in_i [2] $end
$var wire 1 A! in_i [1] $end
$var wire 1 B! in_i [0] $end
$var reg 8 C! out_o [7:0] $end
$upscope $end
$upscope $end
$upscope $end

$scope begin constants_pkg $end
$upscope $end

$scope begin pd0_testbench_sv_unit $end
$upscope $end

$scope begin std $end
$upscope $end

$scope begin alu_sv_unit $end
$upscope $end

$scope begin three_stage_pipeline_sv_unit $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0"
1#
b0 $
b0 %
b0 &
b0 '
1(
0)
b0 *
bx +
b0 ,
b0 -
bx .
b0 B
1C
0D
b0 E
bx Q
bx e
b0 f
1g
0h
b0 q
1r
0s
b0 t
bx i
bx j
bx ~
bx "!
bx k
xl
xm
bx 6!
x7!
x8!
bx 9!
bx C!
b1000 !
b1000 /
b1000 F
b1000 R
b1000 n
b1000 u
b1000 !!
b1000 #!
b1000 :!
01
00
09
08
07
06
05
04
03
02
0A
0@
0?
0>
0=
0<
0;
0:
0G
1H
0P
0O
0N
0M
0L
0K
0J
0I
0S
1T
0\
0[
0Z
0Y
0X
0W
0V
0U
0d
0c
0b
0a
0`
0_
0^
0]
0p
0o
0}
0|
0{
0z
0y
0x
0w
0v
1%!
0$!
x-!
x,!
x+!
x*!
x)!
x(!
x'!
x&!
x5!
x4!
x3!
x2!
x1!
x0!
x/!
x.!
xB!
xA!
x@!
x?!
x>!
x=!
x<!
x;!
$end
#5
1"
1S
1G
b0 Q
b0 ~
b0 "!
b0 C!
b0 e
b0 j
b0 i
b0 +
b0 .
0-!
0,!
0+!
0*!
0)!
0(!
0'!
0&!
05!
04!
03!
02!
01!
00!
0/!
0.!
b0 9!
b0 6!
b0 k
17!
08!
0m
1l
0B!
0A!
0@!
0?!
0>!
0=!
0<!
0;!
#10
0"
0S
0G
#15
1"
1S
1G
#20
0"
0S
0G
#25
1"
1S
1G
0#
0T
0H
#30
0"
0S
0G
#35
1"
1S
1G
b1111 $
b1010 %
1@
1>
19
18
17
16
b11001 E
b11001 B
b11001 &
0C
0(
#36
b10100 $
b101 %
b1 '
11
1A
0@
1?
0>
09
08
06
15
b1111 E
b1111 B
b1111 &
#37
b10101010 $
b1010101 %
b10 '
01
10
1=
1;
18
07
16
05
14
12
b0 E
b0 B
b0 &
1C
1(
#38
b10100000 $
b101 %
b11 '
11
0=
0;
08
06
b10100101 E
b10100101 B
b10100101 &
0C
1D
1)
0(
#39
b101010 *
1O
1M
1K
#40
0"
0S
0G
#45
1"
1S
1G
b101010 Q
b101010 +
#46
b1111011 *
1P
1L
1J
#50
0"
0S
0G
#55
1"
1S
1G
b1111011 Q
b1111011 +
#56
b1100011 *
1#
0M
0L
1T
1H
#60
0"
0S
0G
#65
1"
1S
1G
b0 Q
b0 +
#66
0#
0T
0H
#70
0"
0S
0G
#75
1"
1S
1G
b1100100 ,
b11001 -
1d
1a
1`
1Z
1W
1V
b1111101 t
b1111101 q
b1111101 f
0r
0g
1}
1{
1z
1y
1x
1w
b1100011 Q
b1100011 +
#80
0"
0S
0G
#85
1"
1S
1G
b110010 ,
b11110 -
0d
1c
1b
1[
0Z
1X
0V
b1010000 t
b1010000 q
b1010000 f
0}
0{
0z
0x
b1111101 ~
b1100100 "!
b1100100 j
b1111101 i
1-!
1+!
1*!
1)!
1(!
1'!
13!
10!
1/!
b11001 9!
b11001 6!
b11001 k
07!
0l
1B!
1?!
1>!
#90
0"
0S
0G
#95
1"
1S
1G
b1001011 ,
b1010 -
0b
0`
1\
1Y
0X
0W
1V
b1010101 t
b1010101 q
b1010101 f
1}
1{
b1010000 ~
b110010 "!
b11001 C!
b11001 e
b110010 j
b1010000 i
b11001 .
0-!
0+!
0*!
0(!
14!
03!
11!
0/!
b11110 9!
b11110 6!
b11110 k
0B!
1A!
1@!
#100
0"
0S
0G
#105
1"
1S
1G
b0 ,
b0 -
0c
0a
0\
0[
0Y
0V
b0 t
b0 q
b0 f
1r
1g
0}
0{
0y
0w
b1010101 ~
b1001011 "!
b11110 C!
b11110 e
b1001011 j
b1010101 i
b11110 .
1-!
1+!
15!
12!
01!
00!
1/!
b1010 9!
b1010 6!
b1010 k
0@!
0>!
#110
0"
0S
0G
#115
1"
1S
1G
b0 ~
b0 "!
b1010 C!
b1010 e
b0 j
b0 i
b1010 .
0-!
0+!
0)!
0'!
05!
04!
02!
0/!
b0 9!
b0 6!
b0 k
17!
1l
0A!
0?!
#120
0"
0S
0G
#125
1"
1S
1G
b0 C!
b0 e
b0 .
#130
0"
0S
0G
#135
1"
1S
1G
